import pandas as pd
from sklearn.model_selection import train_test_split

# Load transaction files
jan_txn = pd.read_csv('jan_txn.csv')
feb_txn = pd.read_csv('feb_txn.csv')
mar_txn = pd.read_csv('mar_txn.csv')

# Get unique ACCT_NBR from all transaction files
txn_acct_nbr = pd.concat([jan_txn['ACCT_NBR'], feb_txn['ACCT_NBR'], mar_txn['ACCT_NBR']]).unique()

# Load main dataset
main_df = pd.read_csv('Base_iter.csv')

# Identify active CUST_NBR: customers with at least one ACCT_NBR in transactions
active_cust_nbr = main_df[main_df['ACCT_NBR'].isin(txn_acct_nbr)]['CUST_NBR'].unique()

# Filter main dataset to include only accounts of active customers
filtered_df = main_df[main_df['CUST_NBR'].isin(active_cust_nbr)]

# Perform stratified sampling to get approximately 500,000 rows
n_filtered = len(filtered_df)
if n_filtered <= 500000:
    # If filtered data is less than or equal to 500,000, take all
    sampled_df = filtered_df
else:
    # Calculate sampling fraction
    sampling_fraction = 500000 / n_filtered
    # Stratified sampling by CUST_CLASS
    sampled_df, _ = train_test_split(
        filtered_df,
        train_size=sampling_fraction,
        stratify=filtered_df['CUST_CLASS'],
        random_state=42
    )

# Save the sampled dataset
output_file = 'Base_iter_sampled.csv'
sampled_df.to_csv(output_file, index=False)

print(f"Sampled dataset saved to {output_file} with {len(sampled_df)} rows.")
