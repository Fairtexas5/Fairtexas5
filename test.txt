import pandas as pd
import numpy as np
from sklearn.manifold import TSNE
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
import matplotlib.pyplot as plt
import seaborn as sns

# Select numeric features from your preprocessed DataFrame
numeric_features = df_customer.select_dtypes(include=[np.number]).columns
X = df_customer[numeric_features]

# Step 1: Dimensionality Reduction with t-SNE
tsne = TSNE(n_components=2, perplexity=30, learning_rate=200, n_iter=1000, random_state=42)
X_tsne = tsne.fit_transform(X)
tsne_df = pd.DataFrame(X_tsne, columns=['TSNE1', 'TSNE2'], index=df_customer.index)

# Step 2: Clustering with K-means
kmeans = KMeans(n_clusters=5, random_state=42, n_init=10)
clusters = kmeans.fit_predict(tsne_df)
df_customer['Cluster'] = clusters

# Step 3: Evaluate clustering
sil_score = silhouette_score(tsne_df, clusters)
print(f"Silhouette Score: {sil_score}")

# Step 4: Visualize clusters
plt.figure(figsize=(10, 6))
sns.scatterplot(x=tsne_df['TSNE1'], y=tsne_df['TSNE2'], hue=df_customer['Cluster'], palette='tab10')
plt.title('Customer Segments in t-SNE Space')
plt.xlabel('t-SNE Component 1')
plt.ylabel('t-SNE Component 2')
plt.legend(title='Cluster')
plt.show()

# Optional: Save the results
df_customer.to_csv('segmented_customers_tsne.csv', index=False)
