import pandas as pd
import plotly.graph_objects as go

# List of feature group names in desired order
group_names = ['Balance', 'Product', 'Transaction', 'Digital', 'Risk']

# Normalize feature group averages for each cluster to 0-1
normalized = summary_table.copy()
for name in group_names:
    col_min = normalized[name].min()
    col_max = normalized[name].max()
    # Avoid division by zero if all values are equal
    normalized[name] = (normalized[name] - col_min) / (col_max - col_min) if col_max > col_min else 1.0

# Ensure Cluster is treated as string for naming
normalized['Cluster'] = normalized['Cluster'].astype(str)



# Radar chart requires closing the loop: repeat first value at the end for each trace
radar_categories = group_names + [group_names[0]]

# Prepare traces for each cluster
fig = go.Figure()

for i, row in normalized.iterrows():
    values = [row[name] for name in group_names]
    values += [values[0]]  # Loop closure for radar
    fig.add_trace(go.Scatterpolar(
        r=values,
        theta=radar_categories,
        fill='toself',
        name=f'Cluster {row["Cluster"]}'
    ))



fig.update_layout(
    polar=dict(
        radialaxis=dict(
            visible=True,
            range=[0, 1]
        )
    ),
    title="High-Value Customer Driver Profile by Cluster",
    showlegend=True
)

fig.show()


